/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HeroSlider as PrismaHeroSlider } from "@prisma/client";

export class HeroSliderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HeroSliderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.heroSlider.count(args);
  }

  async heroSliders(
    args: Prisma.HeroSliderFindManyArgs
  ): Promise<PrismaHeroSlider[]> {
    return this.prisma.heroSlider.findMany(args);
  }
  async heroSlider(
    args: Prisma.HeroSliderFindUniqueArgs
  ): Promise<PrismaHeroSlider | null> {
    return this.prisma.heroSlider.findUnique(args);
  }
  async createHeroSlider(
    args: Prisma.HeroSliderCreateArgs
  ): Promise<PrismaHeroSlider> {
    return this.prisma.heroSlider.create(args);
  }
  async updateHeroSlider(
    args: Prisma.HeroSliderUpdateArgs
  ): Promise<PrismaHeroSlider> {
    return this.prisma.heroSlider.update(args);
  }
  async deleteHeroSlider(
    args: Prisma.HeroSliderDeleteArgs
  ): Promise<PrismaHeroSlider> {
    return this.prisma.heroSlider.delete(args);
  }
}
